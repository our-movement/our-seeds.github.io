{"version":3,"sources":["services/firebase/index.js","graphql/resolvers.js","graphql/index.js","graphql/schema.js","utils/reactify-wc.js","components/Core.js","components/Header.js","components/Spinner.js","components/SeedCard.js","utils/index.js","components/MapSearchInput.js","screens/Home.js","screens/Login.js","components/StepInput.js","constants/enums.js","components/InputSeed.js","screens/MyPlace.js","screens/MyAccount.js","components/InputPlace.js","screens/MyBookmarks.js","screens/MyListings.js","screens/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","ui","firebaseui","AuthUI","uiConfig","credentialHelper","CredentialHelper","NONE","signInFlow","signInSuccessUrl","signInOptions","EmailAuthProvider","PROVIDER_ID","UserContext","createContext","user","useSession","useContext","translateOperator","eq","gt","gte","lt","lte","neq","generateQuery","collection","allFilters","AND","reduce","acc","filter","Object","keys","map","key","operatorName","property","operator","value","generateFilterMap","collectionAcc","where","resolvers","Query","root","args","ctx","a","doc","id","get","data","console","log","place","seeds","seedPromises","placesRef","forEach","push","Promise","all","seedsSnap","seed","Mutation","addPlace","add","input","docRef","updatePlace","update","patch","seedRef","removePlace","delete","addSeed","updateSeed","removeSeed","updateUser","set","merge","userRef","Seed","placeId","item","Place","items","User","places","schema","makeExecutableSchema","typeDefs","client","ApolloClient","cache","InMemoryCache","link","SchemaLink","context","reactifyWebComponent","WC","props","eventHandlers","ref","createRef","this","clearEventHandlers","entries","prop","val","toLowerCase","current","className","match","event","substr","addEventListener","setAttribute","removeAttribute","handler","removeEventListener","children","style","createElement","Component","Checkbox","reactifyWc","Text","Container","Select","Option","Button","Box","Toggle","Modal","Tabs","Tab","Grid","GridItem","Flex","Input","Label","Range","Header","history","onSignOut","useHistory","weight","look","to","color","onClick","type","slot","Spinner","SeedCard","name","address","margin-b","depth","objectFit","height","width","src","padding","tag","getGeohashRange","latitude","lngitude","distance","lat","lon","lowerLat","lowerLon","upperLat","upperLon","lower","geohash","encode","upper","throttle","callback","timeFrame","lastTime","now","Date","MapSearchInput","placeholder","inputValue","size","onSelect","useState","placeOptions","setPlaceOptions","searchString","fetch","method","body","JSON","stringify","query","res","json","hits","searchable","full","hide-arrow","onInput","e","getPlaces","target","selectedPlace","find","objectID","_geoloc","lng","locale_names","default","country","label","Home","undefined","handleSelectPlace","signOut","center","padding-x","margin-y","padding-y","inline","fontSize","columns","sm","md","full-height","align-items","justify-content","navigator","geolocation","getCurrentPosition","pos","coords","longitude","Login","useEffect","start","StepInput","step","max","min","onChange","inputRef","useRef","squared","Number","waterConditions","seedCategories","sunConditions","soilConditions","InputSeed","submitButtonText","resetOnSubmit","initialState","count","isPublic","date","temperatureRange","end","onSubmit","setInput","multiple","toString","split","v","enums","soil","sun","water","checked","__typename","handleOnSubmit","ADD_SEED","gql","UPDATE_SEED","GET_USER","GET_PLACE","REMOVE_SEED","REMOVE_PLACE","MySeeds","userSession","useParams","addSeedsModalIsOpen","setAddSeedsModalIsOpen","editSeedsModalIsOpen","setEditSeedsModalIsOpen","seedToEdit","setSeedToEdit","useQuery","variables","uid","userData","loading","placeData","loadingPlace","useMutation","length","i","TableRow","onEdit","onRemove","optimisticResponse","readQuery","writeQuery","align","title","open","onToggle","refetchQueries","userId","MyAccount","document","hasAttribute","darkMode","setDarkMode","InputPlace","countryCode","isLoading","isChanged","setIsChanged","handleSetInput","newInput","disabled","ADD_PLACE","addPlaceModalIsOpen","setAddPlaceModalIsOpen","loadingUserData","radius","bg","no-wrap","mapboxgl","accessToken","SEEDS","SearchResults","URLSearchParams","useLocation","search","mapInstance","setMapInstance","geoHashRange","showFilters","setShowFilters","seedData","loadingSeeds","onMapLoad","resize","onMapMove","mapLng","getCenter","toFixed","mapLat","getZoom","mapRef","useCallback","node","Map","container","zoom","on","off","Marker","setLngLat","addTo","gap","padding-t","margin-r","rounded","Filters","option","labels","sensitivity","PrivateRoute","component","isAuthenticated","rest","render","pathname","state","from","location","App","currentUser","initializing","setState","unsubscribe","onAuthStateChanged","useAuth","Provider","ApolloProvider","basename","window","exact","path","MyListings","MyPlace","MyBookmarks","Boolean","hostname","ReactDOM","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9aa97346.chunk.js","sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCXjXNWozNF8sHatOx0zqXwtVAgPmx-rug\",\n  authDomain: \"our-seeds.firebaseapp.com\",\n  databaseURL: \"https://our-seeds.firebaseio.com\",\n  projectId: \"our-seeds\",\n  storageBucket: \"our-seeds.appspot.com\",\n  messagingSenderId: \"810305458938\",\n  appId: \"1:810305458938:web:4467fb20b5434a02866f43\",\n  measurementId: \"G-MEZ9D4QTYJ\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nconst auth = firebase.auth();\n\nconst ui = new firebaseui.auth.AuthUI(firebase.auth());\n\nconst uiConfig = {\n  credentialHelper: firebaseui.auth.CredentialHelper.NONE,\n  signInFlow: \"popup\",\n  signInSuccessUrl: \"/\",\n  signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n};\n\nconst useAuth = () => {\n  const [state, setState] = useState(() => {\n    const user = firebase.auth().currentUser;\n    return { initializing: !user, user };\n  });\n\n  function onChange(user) {\n    setState({ initializing: false, user });\n  }\n\n  useEffect(() => {\n    // listen for auth state changes\n    const unsubscribe = firebase.auth().onAuthStateChanged(onChange);\n    // unsubscribe to the listener when unmounting\n    return () => unsubscribe();\n  }, []);\n\n  return state;\n};\n\nconst UserContext = createContext({\n  user: null,\n});\n\nconst useSession = () => {\n  const { user } = useContext(UserContext);\n  return user;\n};\n\nexport { db, ui, uiConfig, useAuth, useSession, UserContext, auth };\n","const translateOperator = {\n  eq: \"==\",\n  gt: \">\",\n  gte: \">=\",\n  lt: \"<\",\n  lte: \"<=\",\n  neq: \"!=\",\n};\n\nfunction generateFilterMap(filter) {\n  return Object.keys(filter).map((key) => {\n    const operatorName = Object.keys(filter[key])[0];\n    return {\n      property: key,\n      operator: translateOperator[operatorName],\n      value: filter[key][operatorName],\n    };\n  });\n}\n\nfunction generateQuery(collection, allFilters) {\n  // TODO: How do we chain filters on the collections dynamically?\n  const filterMap = allFilters.AND.reduce((acc, filter) => {\n    return [...acc, ...generateFilterMap(filter)];\n  }, []);\n\n  return filterMap.reduce((collectionAcc, filter) => {\n    return collectionAcc.where(filter.property, filter.operator, filter.value);\n  }, collection);\n}\n\nconst resolvers = {\n  Query: {\n    user: async (root, args, ctx) => {\n      try {\n        const user = await ctx.db.collection(\"users\").doc(args.id).get();\n        return { id: args.id, ...user.data() };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    place: async (root, args, ctx) => {\n      try {\n        const place = await ctx.db.collection(\"places\").doc(args.id).get();\n        return { id: args.id, ...place.data() };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    seeds: async (root, args, ctx) => {\n      try {\n        const seeds = [];\n        const seedPromises = [];\n        const placesRef = generateQuery(\n          ctx.db.collection(\"places\"),\n          args.filter\n        );\n\n        const places = await placesRef.get();\n\n        places.forEach((place) => {\n          seedPromises.push(\n            ctx.db\n              .collection(\"seeds\")\n              .where(\"isPublic\", \"==\", true)\n              .where(\"placeId\", \"==\", place.id)\n              .get()\n          );\n        });\n\n        const placesWithSeeds = await Promise.all(seedPromises);\n\n        placesWithSeeds.forEach((seedsSnap) => {\n          seedsSnap.forEach((seed) => {\n            seeds.push({ id: seed.id, ...seed.data() });\n          });\n        });\n\n        return seeds;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n  Mutation: {\n    addPlace: async (root, args, ctx) => {\n      try {\n        var docRef = await ctx.db.collection(\"places\").add({\n          ...args.input,\n        });\n        return { id: docRef.id, ...args.input };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    updatePlace: async (root, args, ctx) => {\n      try {\n        await ctx.db\n          .collection(\"places\")\n          .doc(args.id)\n          .update({ ...args.patch });\n        const seedRef = await ctx.db.collection(\"places\").doc(args.id).get();\n        return { id: seedRef.id, ...seedRef.data() };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    removePlace: async (root, args, ctx) => {\n      try {\n        await ctx.db.collection(\"places\").doc(args.id).delete();\n        return { id: args.id };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    addSeed: async (root, args, ctx) => {\n      try {\n        var docRef = await ctx.db.collection(\"seeds\").add({\n          ...args.input,\n        });\n        return { id: docRef.id, ...args.input };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    updateSeed: async (root, args, ctx) => {\n      try {\n        await ctx.db\n          .collection(\"seeds\")\n          .doc(args.id)\n          .update({ ...args.patch });\n        const seedRef = await ctx.db.collection(\"seeds\").doc(args.id).get();\n        return { id: seedRef.id, ...seedRef.data() };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    removeSeed: async (root, args, ctx) => {\n      try {\n        await ctx.db.collection(\"seeds\").doc(args.id).delete();\n        return { id: args.id };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    updateUser: async (root, args, ctx) => {\n      try {\n        await ctx.db\n          .collection(\"users\")\n          .doc(args.id)\n          .set({ ...args.patch }, { merge: true });\n        const userRef = await ctx.db.collection(\"users\").doc(args.id).get();\n        return { id: args.id, ...userRef.data() };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n  Seed: {\n    place: async (seed, args, ctx) => {\n      try {\n        if (!seed.placeId) return null;\n        const item = await ctx.db.collection(\"places\").doc(seed.placeId).get();\n        return { id: item.id, ...item.data() };\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n  Place: {\n    seeds: async (place, args, ctx) => {\n      try {\n        const items = [];\n        const itemsRef = await ctx.db\n          .collection(\"seeds\")\n          .where(\"placeId\", \"==\", place.id)\n          .get();\n        itemsRef.forEach((item) => {\n          items.push({ id: item.id, ...item.data() });\n        });\n        return items;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n  User: {\n    seeds: async (user, args, ctx) => {\n      try {\n        const items = [];\n        const itemsRef = await ctx.db\n          .collection(\"seeds\")\n          .where(\"userId\", \"==\", user.id)\n          .get();\n        itemsRef.forEach((item) => {\n          items.push({ id: item.id, ...item.data() });\n        });\n        return items;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    places: async (user, args, ctx) => {\n      try {\n        const items = [];\n        const itemsRef = await ctx.db\n          .collection(\"places\")\n          .where(\"userId\", \"==\", user.id)\n          .get();\n        itemsRef.forEach((item) => {\n          items.push({ id: item.id, ...item.data() });\n        });\n        return items;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n};\n\nexport default resolvers;\n","import { makeExecutableSchema } from \"graphql-tools\";\nimport { SchemaLink } from \"apollo-link-schema\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { auth, db } from \"../services/firebase\";\n\nimport typeDefs from \"./schema\";\nimport resolvers from \"./resolvers\";\n\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers,\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new SchemaLink({ schema, context: { auth, db } }),\n});\n\nexport { client };\n","export default `\ntype Query {\n  user(id: ID!): User!\n  seed(id: ID!): Seed!\n  seeds(filter: SeedFilters): [Seed!]!\n  place(id: ID!): Place!\n}\n\ntype Mutation {\n  signIn(input: SignInInput!): User!\n  sinUp(input: SignUpInput!): User!\n\n  updateUser(id: ID!, patch: UpdateUserInput): User!\n\n  addSeed(input: AddSeedInput!): Seed!\n  updateSeed(id: ID!, patch: UpdateSeedInput!): Seed!\n  removeSeed(id: ID!): RemoveSeedPayload!\n\n  addPlace(input: AddPlaceInput!): Place!\n  updatePlace(id: ID!, patch: UpdatePlaceInput!): Place!\n  removePlace(id: ID!): RemovePlacePayload!\n\n}\n\ninput SignInInput {\n  email: String!\n  password: String!\n}\n\ninput SignUpInput {\n  email: String!\n  password: String!\n}\n\ntype Place {\n  id: ID!\n  name: String!\n  address: String\n  lat: Float!\n  lng: Float!\n  geohash: String!\n  countryCode: String!\n  seeds: [Seed!]\n  user: User!\n}\n\ninput AddPlaceInput {\n  name: String!\n  address: String!\n  lat: Float!\n  lng: Float!\n  geohash: String!\n  countryCode: String!\n  userId: ID!\n}\n\ninput UpdatePlaceInput {\n  name: String\n  address: String\n  lat: Float\n  lng: Float\n  geohash: String\n  countryCode: String\n  userId: ID\n}\n\ntype RemovePlacePayload {\n  id: ID!\n}\n\ntype Seed {\n  id: ID!\n  name: String!\n  count: Int!\n  date: String!\n  soilConditions: [SoilCondition]\n  waterConditions: [WaterCondition]\n  sunConditions: [SunCondition]\n  temperatureRange: TemperatureRange\n  isPublic: Boolean!\n  user: User!\n  place: Place\n  category: SeedCategory\n}\n\ninput AddSeedInput {\n  name: String!\n  count: Int!\n  date: String!\n  soilConditions: [SoilCondition]\n  waterConditions: [WaterCondition]\n  sunConditions: [SunCondition]\n  temperatureRange: TemperatureRangeInput\n  isPublic: Boolean!\n  category: SeedCategory\n  userId: ID!\n  placeId: ID\n}\n\ninput UpdateSeedInput {\n  name: String\n  count: Int\n  date: String\n  isPublic: Boolean\n  soilConditions: [SoilCondition]\n  waterConditions: [WaterCondition]\n  sunConditions: [SunCondition]\n  temperatureRange: TemperatureRangeInput\n  category: SeedCategory\n  userId: ID\n  placeId: ID\n}\n\ntype RemoveSeedPayload {\n  id: ID!\n}\n\ninput SeedFilters {\n  AND: [SeedFilter]\n  OR: [SeedFilter]\n}\n\ninput SeedFilter {\n  id: String\n  count: IntFilter\n  geohash: StringFilter\n  countryCode: StringFilter\n  name: StringFilter\n  category: StringFilter\n}\n\ntype User {\n  id: ID!\n  places: [Place!]\n  seeds: [Seed!]\n}\n\ninput UpdateUserInput {\n  countryCode: String\n}\n\ninput TemperatureRangeInput {\n  start: Int!\n  end: Int!\n}\n\ntype TemperatureRange {\n  start: Int!\n  end: Int!\n}\n\nenum SoilCondition {\n  CLAY\n  SILTY\n  SANDY\n  CHALKY\n  PEATY\n  LOAMY\n}\n\nenum SunCondition {\n  FULL_SUN\n  SHADE\n  LIGHT_SHADE\n  PARTIAL_SHADE\n  FULL_SHADE\n  DENSE_SHADE\n}\n\nenum WaterCondition {\n  LOW\n  MEDIUM\n  HIGH\n}\n\nenum SeedCategory {\n  NUTS\n  BEANS\n  BEETS\n  BROCCOLI_CAULIFLOUR\n  CARROTS\n  CORN\n  COVER_CROPS\n  CUCUMBERS\n  TREE_FRUIT\n  BERRIES\n  GOURDS\n  GRAINS\n  GREENS\n  HERBS_AND_SPICES\n  MELONS\n  ONIONS\n  PEPPERS\n  RADISH_AND_TURNIPS\n  SQUASH\n  TOMATOES\n}\n\ninput IntFilter {\n  gt: Int\n  gte: Int\n  lt: Int\n  lte: Int\n  eq: Int\n  neq: Int\n}\n\ninput StringFilter {\n  eq: String\n  neq: String\n  in: [String]\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n}\n`;\n","import {\n  RefObject,\n  Component,\n  createRef,\n  createElement,\n  ReactNode,\n} from \"react\";\n\nconst reactifyWebComponent = (WC) => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.eventHandlers = [];\n      this.ref = createRef();\n    }\n\n    update() {\n      this.clearEventHandlers();\n      Object.entries(this.props).forEach(([prop, val]) => {\n        if (prop === \"children\") {\n          return undefined;\n        }\n        if (prop.toLowerCase() === \"classname\") {\n          return (this.ref.current.className = val);\n        }\n        if (typeof val === \"function\" && prop.match(/^on[A-Z]/)) {\n          const event = prop[2].toLowerCase() + prop.substr(3);\n          this.eventHandlers.push([event, val]);\n          return this.ref.current.addEventListener(event, val);\n        }\n        if (typeof val === \"function\" && prop.match(/^on\\-[a-z]/)) {\n          const event = prop.substr(3);\n          this.eventHandlers.push([event, val]);\n          return this.ref.current.addEventListener(event, val);\n        }\n        if (typeof val === \"string\" || typeof val === \"number\") {\n          this.ref.current[prop] = val;\n          return this.ref.current.setAttribute(prop, val);\n        }\n        if (typeof val === \"boolean\") {\n          if (val) {\n            this.ref.current[prop] = true;\n            return this.ref.current.setAttribute(prop, val);\n          }\n          delete this.ref.current[prop];\n          return this.ref.current.removeAttribute(prop);\n        }\n        this.ref.current[prop] = val;\n        return undefined;\n      });\n    }\n\n    componentDidUpdate() {\n      this.update();\n    }\n\n    componentDidMount() {\n      this.update();\n    }\n\n    componentWillUnmount() {\n      this.clearEventHandlers();\n    }\n\n    clearEventHandlers() {\n      this.eventHandlers.forEach(([event, handler]) => {\n        this.ref.current.removeEventListener(event, handler);\n      });\n      this.eventHandlers = [];\n    }\n\n    render() {\n      const { children, style } = this.props;\n      return createElement(WC, { ref: this.ref, style }, children);\n    }\n  };\n};\n\nexport default reactifyWebComponent;\n","import \"./Core.css\";\nimport reactifyWc from \"../utils/reactify-wc\";\n\nexport const Checkbox = reactifyWc(\"core-checkbox\");\nexport const Text = reactifyWc(\"core-text\");\nexport const Container = reactifyWc(\"core-container\");\nexport const Select = reactifyWc(\"core-select\");\nexport const Option = reactifyWc(\"core-option\");\nexport const Radio = reactifyWc(\"core-radio\");\nexport const Button = reactifyWc(\"core-button\");\nexport const Box = reactifyWc(\"core-box\");\nexport const Toggle = reactifyWc(\"core-toggle\");\nexport const Modal = reactifyWc(\"core-modal\");\nexport const Tabs = reactifyWc(\"core-tabs\");\nexport const Tab = reactifyWc(\"core-tab\");\nexport const Grid = reactifyWc(\"core-grid\");\nexport const GridItem = reactifyWc(\"core-grid-item\");\nexport const Accordion = reactifyWc(\"core-accordion\");\nexport const Flex = reactifyWc(\"core-flex\");\nexport const Input = reactifyWc(\"core-input\");\nexport const Label = reactifyWc(\"core-label\");\nexport const Range = reactifyWc(\"core-range\");\nexport const Dropdown = reactifyWc(\"core-dropdown\");\n","import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport \"./Header.css\";\nimport * as Our from \"./Core\";\n\nexport default function Header({ user, onSignOut }) {\n  const history = useHistory();\n\n  return (\n    <header className=\"header\">\n      <Our.Text className=\"logo\" weight=\"600\" look=\"h5\">\n        <Link to=\"/\">\n          <span style={{ color: \"var(--core-color-primary)\" }}>Our</span> Seeds\n        </Link>\n      </Our.Text>\n      <nav>\n        <Our.Button onClick={() => history.push(\"/\")} type=\"transparent\">\n          <i slot=\"start\" className=\"gg-search\"></i>\n          <span>Find</span>\n        </Our.Button>\n        {user ? (\n          <>\n            <Our.Button\n              onClick={() => history.push(\"/my-bookmarks\")}\n              type=\"transparent\"\n            >\n              <i slot=\"start\" className=\"gg-bookmark\"></i>\n              <span>Saved</span>\n            </Our.Button>\n            <Our.Button\n              onClick={() => history.push(\"/my-listings\")}\n              type=\"transparent\"\n            >\n              <i slot=\"start\" className=\"gg-list\"></i>\n              <span>Contribute</span>\n            </Our.Button>\n            <Our.Button\n              onClick={() => history.push(\"/my-account\")}\n              type=\"transparent\"\n            >\n              <i slot=\"start\" className=\"gg-profile\"></i>\n              <span>Profile</span>\n            </Our.Button>\n          </>\n        ) : (\n          <>\n            <Our.Button\n              onClick={() => history.push(\"/login\")}\n              type=\"transparent\"\n            >\n              <i slot=\"start\" className=\"gg-profile\"></i>\n              <span>Login</span>\n            </Our.Button>\n          </>\n        )}\n      </nav>\n    </header>\n  );\n}\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nexport default function Spinner() {\n  return (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as Our from \"./Core\";\n\nexport default function SeedCard({\n  seed = { name: \"\", place: { address: \"\" } },\n}) {\n  return (\n    <Our.Box margin-b=\"md\" depth=\"sm\">\n      <Our.Flex>\n        <img\n          style={{ objectFit: \"cover\", height: \"200px\", width: \"30%\" }}\n          src=\"http://placeimg.com/640/480/nature\"\n        ></img>\n        <Our.Box padding=\"lg\">\n          <Our.Text tag=\"h3\">{seed.name}</Our.Text>\n          <Our.Text>{seed.place.address}</Our.Text>\n        </Our.Box>\n      </Our.Flex>\n    </Our.Box>\n  );\n}\n","import reactifyWc from \"./reactify-wc\";\nimport geohash from \"ngeohash\";\n// Calculate the upper and lower boundary geohashes for\n// a given latitude, lngitude, and distance in miles\nexport const getGeohashRange = (latitude, lngitude, distance = 50) => {\n  const lat = 0.0144927536231884; // degrees latitude per mile\n  const lon = 0.0181818181818182; // degrees lngitude per mile\n\n  const lowerLat = latitude - lat * distance;\n  const lowerLon = lngitude - lon * distance;\n\n  const upperLat = latitude + lat * distance;\n  const upperLon = lngitude + lon * distance;\n\n  const lower = geohash.encode(lowerLat, lowerLon);\n  const upper = geohash.encode(upperLat, upperLon);\n\n  return {\n    lower,\n    upper,\n  };\n};\n\nexport function throttle(callback, timeFrame) {\n  var lastTime = 0;\n  return function () {\n    var now = new Date();\n    if (now - lastTime >= timeFrame) {\n      callback();\n      lastTime = now;\n    }\n  };\n}\n\nexport default { throttle, getGeohashRange, reactifyWc };\n","import React, { useState } from \"react\";\nimport * as Our from \"./Core\";\nimport \"./MapSearchInput.css\";\nimport { throttle } from \"../utils\";\n\nexport default function MapSearchInput({\n  placeholder = \"Search for a place\",\n  value,\n  inputValue,\n  size = \"md\",\n  onSelect = () => {},\n}) {\n  const [placeOptions, setPlaceOptions] = useState([]);\n\n  async function getPlaces(searchString) {\n    const res = await fetch(\n      \"https://places-dsn.algolia.net/1/places/query?x-algolia-agent=Algolia%20for%20vanilla%20JavaScript%20(lite)%203.27.1%3BAlgolia%20Places%201.7.2&x-algolia-application-id=plQQRTS1QNIY&x-algolia-api-key=5edbd83cd85570af844d7bf964eaae3e\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ query: searchString }),\n      }\n    );\n\n    const json = await res.json();\n\n    setPlaceOptions(json.hits || []);\n  }\n\n  function handleSelect(e) {\n    const selectedPlace = placeOptions.find(\n      (place) => place.objectID === e.target.value\n    );\n    onSelect({\n      id: selectedPlace.objectID,\n      lat: selectedPlace._geoloc.lat,\n      lng: selectedPlace._geoloc.lng,\n      address:\n        selectedPlace.locale_names.default[0] +\n        \", \" +\n        selectedPlace.country.default,\n    });\n  }\n\n  return (\n    <Our.Select\n      className=\"map-search-input\"\n      searchable\n      full\n      hide-arrow\n      placeholder={placeholder}\n      onInput={(e) => throttle(getPlaces(e.target.inputValue), 100)}\n      onSelect={handleSelect}\n      size={size}\n      searchable\n    >\n      <i className=\"gg-search\" slot=\"start\"></i>\n      {placeOptions.map((place) => {\n        return (\n          <Our.Option\n            key={place.objectID}\n            value={place.objectID}\n            label={place.locale_names.default[0] + \", \" + place.country.default}\n          ></Our.Option>\n        );\n      })}\n    </Our.Select>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSession, auth } from \"../services/firebase\";\n\nimport * as Our from \"../components/Core\";\nimport Header from \"../components/Header\";\nimport Spinner from \"../components/Spinner\";\nimport SeedCard from \"../components/SeedCard\";\nimport MapSearchInput from \"../components/MapSearchInput\";\nimport { getGeohashRange } from \"../utils\";\nimport { useLazyQuery, gql } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home() {\n  const user = useSession();\n  const history = useHistory();\n\n  const [showConditionsFilter, setShowConditionsFilter] = useState(false);\n  const [showCategoriesFilter, setShowCategoriesFilter] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState(undefined);\n\n  function handleSelectPlace(place) {\n    history.push(`/results?&lat=${place.lat}&lng=${place.lng}`);\n  }\n\n  function findMe() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((pos) => {\n        const lat = pos.coords.latitude;\n        const lng = pos.coords.longitude;\n        handleSelectPlace({ lat, lng });\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  return (\n    <div id=\"home\">\n      <Header\n        user={user}\n        onSignOut={() => {\n          auth.signOut();\n        }}\n      ></Header>\n\n      <Our.Container center size=\"md\">\n        <Our.Box padding-x=\"lg\" margin-y=\"xl\" padding-y=\"xl\">\n          <Our.Text\n            inline\n            className=\"main-heading\"\n            weight=\"500\"\n            look=\"\"\n            tag=\"h1\"\n          >\n            Find seeds that grow in your climate\n            <i\n              style={{ fontSize: \"100px\", color: \"var(--core-color-primary)\" }}\n            >\n              .\n            </i>\n          </Our.Text>\n\n          <Our.Container size=\"sm\">\n            <Our.Box margin-y=\"lg\" padding=\"md\" depth=\"sm\">\n              <Our.Grid columns=\"9\">\n                <Our.GridItem sm=\"9\" md=\"4\">\n                  <MapSearchInput\n                    size=\"xl\"\n                    placeholder=\"Enter your city, place or address\"\n                    onSelect={(place) => {\n                      handleSelectPlace(place);\n                    }}\n                  ></MapSearchInput>\n                </Our.GridItem>\n                <Our.GridItem sm=\"9\" md=\"1\">\n                  <Our.Flex\n                    full-height\n                    align-items=\"center\"\n                    justify-content=\"center\"\n                  >\n                    or\n                  </Our.Flex>\n                </Our.GridItem>\n                <Our.GridItem sm=\"9\" md=\"4\">\n                  <Our.Button\n                    onClick={() => findMe()}\n                    full\n                    size=\"xl\"\n                    type=\"primary\"\n                  >\n                    <i slot=\"start\" className=\"gg-pin\"></i>\n                    Find me\n                  </Our.Button>\n                </Our.GridItem>\n              </Our.Grid>\n            </Our.Box>\n          </Our.Container>\n        </Our.Box>\n      </Our.Container>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { ui, uiConfig } from \"../services/firebase\";\nimport * as Our from \"../components/Core\";\n\nexport default function Login() {\n  useEffect(() => {\n    ui.start(\"#login\", uiConfig);\n  }, []);\n\n  return (\n    <Our.Box margin-y=\"xl\">\n      <Our.Container center size=\"sm\" id=\"login\"></Our.Container>\n    </Our.Box>\n  );\n}\n","import React, { useRef } from \"react\";\nimport * as Our from \"./Core\";\nimport \"./StepInput.css\";\n\nexport default function StepInput({\n  value = 0,\n  step = 1,\n  max,\n  min,\n  onChange = () => {},\n}) {\n  const inputRef = useRef(null);\n\n  return (\n    <>\n      <Our.Button onClick={() => onChange(value - step)} squared>\n        -\n      </Our.Button>\n      <Our.Input\n        className=\"step\"\n        ref={inputRef}\n        onChange={(e) => onChange(Number(e.target.value))}\n        value={value}\n        step={step}\n        type=\"number\"\n        max={max}\n        min={min}\n      ></Our.Input>\n      <Our.Button squared onClick={() => onChange(value + step)}>\n        +\n      </Our.Button>\n    </>\n  );\n}\n","export const sunConditions = [\n  \"FULL_SUN\",\n  \"SHADE\",\n  \"LIGHT_SHADE\",\n  \"PARTIAL_SHADE\",\n  \"FULL_SHADE\",\n  \"DENSE_SHADE\",\n];\n\nexport const soilConditions = [\n  \"CLAY\",\n  \"SILTY\",\n  \"SANDY\",\n  \"CHALKY\",\n  \"PEATY\",\n  \"LOAMY\",\n];\n\nexport const waterConditions = [\"LOW\", \"MEDIUM\", \"HIGH\"];\n\nexport const seedCategories = [\n  \"NUTS\",\n  \"BEANS\",\n  \"BEETS\",\n  \"BROCCOLI_CAULIFLOUR\",\n  \"CARROTS\",\n  \"CORN\",\n  \"COVER_CROPS\",\n  \"CUCUMBERS\",\n  \"TREE_FRUIT\",\n  \"BERRIES\",\n  \"GOURDS\",\n  \"GRAINS\",\n  \"GREENS\",\n  \"HERBS_AND_SPICES\",\n  \"MELONS\",\n  \"ONIONS\",\n  \"PEPPERS\",\n  \"RADISH_AND_TURNIPS\",\n  \"SQUASH\",\n  \"TOMATOES\",\n];\n\nexport default {\n  waterConditions,\n  seedCategories,\n  sunConditions,\n  soilConditions,\n};\n","import React, { useState, useEffect } from \"react\";\nimport * as Our from \"./Core\";\nimport StepInput from \"./StepInput\";\nimport enums from \"../constants/enums\";\n\nexport default function InputSeed({\n  submitButtonText = \"Save\",\n  resetOnSubmit = false,\n  places = [],\n  initialState = {\n    name: \"\",\n    count: 10,\n    isPublic: false,\n    date: \"\",\n    placeId: \"\",\n    sunConditions: [],\n    waterConditions: [],\n    soilConditions: [],\n    temperatureRange: { start: 10, end: 30 },\n  },\n  onSubmit,\n}) {\n  const [input, setInput] = useState(initialState);\n\n  useEffect(() => {\n    setInput(initialState);\n  }, [JSON.stringify(initialState)]);\n\n  function handleOnSubmit() {\n    const { __typename, id, ...data } = input;\n    onSubmit({ ...data });\n    if (resetOnSubmit) setInput(initialState);\n  }\n\n  return (\n    <>\n      <Our.Container size=\"xs\" center>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Name:</Our.Label>\n          <Our.Input\n            value={input.name}\n            onInput={(e) => setInput({ ...input, name: e.target.value })}\n            full\n          >\n            <div slot=\"error\">Field is required</div>\n          </Our.Input>\n        </Our.Box>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Date:</Our.Label>\n          <Our.Input\n            type=\"date\"\n            value={input.date}\n            onInput={(e) => setInput({ ...input, date: e.target.value })}\n            full\n          ></Our.Input>\n        </Our.Box>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Place:</Our.Label>\n          <Our.Select\n            value={input.placeId}\n            onChange={(e) =>\n              setInput({\n                ...input,\n                placeId: e.target.value,\n              })\n            }\n            full\n          >\n            {places.map((place) => (\n              <Our.Option\n                value={place.id}\n                label={place.name}\n                key={place.id}\n              ></Our.Option>\n            ))}\n          </Our.Select>\n        </Our.Box>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Soil Conditions:</Our.Label>\n          <Our.Select\n            multiple\n            value={input.soilConditions.toString()}\n            onChange={(e) =>\n              setInput({\n                ...input,\n                soilConditions: e.target.value\n                  .split(\",\")\n                  .filter((v) => v !== \"\"),\n              })\n            }\n            full\n          >\n            {enums.soilConditions.map((soil) => (\n              <Our.Option value={soil} key={soil}>\n                {soil}\n              </Our.Option>\n            ))}\n          </Our.Select>\n        </Our.Box>\n\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Sun Conditions:</Our.Label>\n          <Our.Select\n            multiple\n            value={input.sunConditions.toString()}\n            onChange={(e) =>\n              setInput({\n                ...input,\n                sunConditions: e.target.value\n                  .split(\",\")\n                  .filter((v) => v !== \"\"),\n              })\n            }\n            full\n          >\n            {enums.sunConditions.map((sun) => (\n              <Our.Option value={sun} key={sun}>\n                {sun}\n              </Our.Option>\n            ))}\n          </Our.Select>\n        </Our.Box>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Water Conditions:</Our.Label>\n          <Our.Select\n            multiple\n            value={input.waterConditions.toString()}\n            onChange={(e) =>\n              setInput({\n                ...input,\n                waterConditions: e.target.value\n                  .split(\",\")\n                  .filter((v) => v !== \"\"),\n              })\n            }\n            full\n          >\n            {enums.waterConditions.map((water) => (\n              <Our.Option value={water} key={water}>\n                {water}\n              </Our.Option>\n            ))}\n          </Our.Select>\n        </Our.Box>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Count:</Our.Label>\n          <StepInput\n            value={input.count}\n            onChange={(val) => setInput({ ...input, count: val })}\n          ></StepInput>\n        </Our.Box>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Public:</Our.Label>\n          <Our.Toggle\n            checked={input.isPublic}\n            onChange={(e) => setInput({ ...input, isPublic: e.target.checked })}\n          ></Our.Toggle>\n        </Our.Box>\n        <Our.Box margin-y=\"md\">\n          <Our.Button full type=\"primary\" onClick={() => handleOnSubmit()}>\n            {submitButtonText}\n          </Our.Button>\n        </Our.Box>\n      </Our.Container>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport * as Our from \"../components/Core\";\nimport { useSession, auth } from \"../services/firebase\";\nimport { useMutation, gql, useQuery } from \"@apollo/client\";\nimport Spinner from \"../components/Spinner\";\nimport InputSeed from \"../components/InputSeed\";\n\nconst ADD_SEED = gql`\n  mutation AddSeed($input: AddSeedInput) {\n    addSeed(input: $input) {\n      id\n    }\n  }\n`;\n\nconst UPDATE_SEED = gql`\n  mutation UpdateSeed($id: ID!, $patch: UpdateSeedInput) {\n    updateSeed(id: $id, patch: $patch) {\n      id\n    }\n  }\n`;\n\nconst GET_USER = gql`\n  query GetUser($id: ID!) {\n    user(id: $id) {\n      id\n      places {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst GET_PLACE = gql`\n  query GetPlace($id: ID!) {\n    place(id: $id) {\n      id\n      name\n      seeds {\n        name\n        id\n        date\n        count\n        isPublic\n        waterConditions\n        soilConditions\n        sunConditions\n      }\n    }\n  }\n`;\n\nconst REMOVE_SEED = gql`\n  mutation RemoveSeed($id: ID!) {\n    removeSeed(id: $id) {\n      id\n    }\n  }\n`;\n\nconst REMOVE_PLACE = gql`\n  mutation RemovePlace($id: ID!) {\n    removePlace(id: $id) {\n      id\n    }\n  }\n`;\n\nexport default function MySeeds() {\n  const history = useHistory();\n  const userSession = useSession();\n  let { placeId } = useParams();\n\n  const [addSeedsModalIsOpen, setAddSeedsModalIsOpen] = useState(false);\n  const [editSeedsModalIsOpen, setEditSeedsModalIsOpen] = useState(false);\n  const [seedToEdit, setSeedToEdit] = useState(undefined);\n\n  const { data: userData, loading: loadingUser } = useQuery(GET_USER, {\n    variables: { id: userSession.uid },\n  });\n\n  const { data: placeData, loading: loadingPlace } = useQuery(GET_PLACE, {\n    variables: { id: placeId },\n  });\n\n  const [updateSeed] = useMutation(UPDATE_SEED);\n  const [addSeed] = useMutation(ADD_SEED);\n  const [removeSeed] = useMutation(REMOVE_SEED);\n  const [removePlace] = useMutation(REMOVE_PLACE);\n\n  return (\n    <>\n      <Header\n        user={userSession}\n        onSignOut={() => {\n          auth.signOut();\n        }}\n      ></Header>\n      <Our.Container center size=\"md\">\n        <Our.Box padding-x=\"md\" margin-y=\"md\">\n          <Our.Button\n            onClick={() => history.push(\"/my-listings\")}\n            type=\"transparent\"\n          >\n            <i slot=\"start\" className=\"gg-arrow-left\"></i> Places\n          </Our.Button>\n        </Our.Box>\n        <Our.Box padding-x=\"lg\" margin-y=\"xl\">\n          {placeData && (\n            <Our.Box margin-y=\"xl\">\n              <Our.Text className=\"main\" weight=\"500\" tag=\"h1\">\n                {placeData.place.name}\n              </Our.Text>\n            </Our.Box>\n          )}\n        </Our.Box>\n        <Our.Box>\n          <Our.Tabs>\n            <Our.Tab>All</Our.Tab>\n            <Our.Tab>RatPark</Our.Tab>\n            <Our.Tab>Guatuso</Our.Tab>\n          </Our.Tabs>\n        </Our.Box>\n        <Our.Box padding-x=\"lg\" margin-y=\"lg\">\n          <Our.Flex align-items=\"center\" justify-content=\"between\">\n            <Our.Text weight=\"500\" inline tag=\"h2\">\n              Seeds\n            </Our.Text>\n            <Our.Button\n              type=\"transparent\"\n              onClick={() => setAddSeedsModalIsOpen(true)}\n            >\n              <i className=\"gg-math-plus\"></i>\n            </Our.Button>\n          </Our.Flex>\n        </Our.Box>\n      </Our.Container>\n      <Our.Container center size=\"md\">\n        <Our.Box padding-y=\"lg\">\n          {loadingPlace ? (\n            <Our.Flex justify-content=\"center\" align-items=\"center\">\n              <Spinner></Spinner>\n            </Our.Flex>\n          ) : placeData && placeData.place.seeds.length ? (\n            <div className=\"table-wrapper\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Count</th>\n                    <th>Public</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {placeData &&\n                    placeData.place.seeds.map((seed, i) => {\n                      return (\n                        <TableRow\n                          onEdit={() => {\n                            setSeedToEdit(seed);\n                            setEditSeedsModalIsOpen(true);\n                          }}\n                          onRemove={() => {\n                            removeSeed({\n                              variables: { id: seed.id },\n                              optimisticResponse: {\n                                __typename: \"Mutation\",\n                                removeSeed: {\n                                  id: seed.id,\n                                  __typename: \"RemoveSeedPayload\",\n                                },\n                              },\n                              update: (cache, { data: { removeSeed } }) => {\n                                // Read the data from our cache for this query.\n                                const data = cache.readQuery({\n                                  query: GET_PLACE,\n                                  variables: { id: placeId },\n                                });\n                                // Write our data back to the cache with the new comment in it\n                                cache.writeQuery({\n                                  query: GET_PLACE,\n                                  data: {\n                                    place: {\n                                      ...data.place,\n                                      seeds: [\n                                        ...data.place.seeds.filter(\n                                          (seed) => seed.id !== removeSeed.id\n                                        ),\n                                      ],\n                                    },\n                                  },\n                                });\n                              },\n                            });\n                          }}\n                          seed={seed}\n                          key={seed.id}\n                        ></TableRow>\n                      );\n                    })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Our.Text tag=\"h3\" weight=\"400\" align=\"center\">\n              You have no seeds registered in this place.\n            </Our.Text>\n          )}\n        </Our.Box>\n        <Our.Box padding-y=\"lg\" padding-x=\"lg\">\n          <Our.Button\n            full\n            onClick={() => {\n              removePlace({\n                variables: { id: placeData.place.id },\n                optimisticResponse: {\n                  __typename: \"Mutation\",\n                  removePlace: {\n                    id: placeData.place.id,\n                    __typename: \"RemovePlacePayload\",\n                  },\n                },\n                update: (cache, { data: { removePlace } }) => {\n                  // Read the data from our cache for this query.\n                  const data = cache.readQuery({\n                    query: GET_USER,\n                    variables: { id: userSession.uid },\n                  });\n                  // Write our data back to the cache with the new comment in it\n                  cache.writeQuery({\n                    query: GET_USER,\n                    data: {\n                      user: {\n                        ...data.user,\n                        places: [\n                          ...data.user.places.filter(\n                            (place) => place.id !== removePlace.id\n                          ),\n                        ],\n                      },\n                    },\n                  });\n                },\n              });\n              history.push(\"/my-listings\");\n            }}\n          >\n            <i slot=\"start\" className=\"gg-trash\"></i> Delete place\n          </Our.Button>\n        </Our.Box>\n      </Our.Container>\n      <Our.Modal\n        title=\"Edit Seed\"\n        open={editSeedsModalIsOpen}\n        onToggle={(e) => setEditSeedsModalIsOpen(e.target.open)}\n      >\n        <InputSeed\n          initialState={seedToEdit}\n          places={userData && userData.user.places}\n          onSubmit={(input) => {\n            setEditSeedsModalIsOpen(false);\n            updateSeed({\n              variables: { id: seedToEdit.id, patch: input },\n              refetchQueries: [\n                {\n                  query: GET_PLACE,\n                  variables: { id: placeId },\n                },\n              ],\n            });\n          }}\n        ></InputSeed>\n      </Our.Modal>\n      <Our.Modal\n        title=\"Add Seed\"\n        open={addSeedsModalIsOpen}\n        onToggle={(e) => setAddSeedsModalIsOpen(e.target.open)}\n      >\n        <InputSeed\n          resetOnSubmit\n          places={userData && userData.user.places}\n          initialState={{\n            name: \"\",\n            count: 10,\n            isPublic: false,\n            date: \"\",\n            placeId: placeId,\n            sunConditions: [],\n            waterConditions: [],\n            soilConditions: [],\n            temperatureRange: { start: 10, end: 30 },\n          }}\n          onSubmit={(input) => {\n            setAddSeedsModalIsOpen(false);\n            addSeed({\n              variables: { input: { ...input, userId: userSession.uid } },\n              refetchQueries: [\n                {\n                  query: GET_PLACE,\n                  variables: { id: placeId },\n                },\n              ],\n            });\n          }}\n        ></InputSeed>\n      </Our.Modal>\n    </>\n  );\n}\n\nfunction TableRow({ seed, onRemove, onEdit }) {\n  return (\n    <tr>\n      <td>{seed.name}</td>\n      <td>{seed.count}</td>\n      <td>{seed.isPublic ? \"Yes\" : \"No\"}</td>\n      <td className=\"align-right\">\n        <Our.Button type=\"transparent\" onClick={onEdit}>\n          <span>Edit</span>\n        </Our.Button>\n        <Our.Button type=\"transparent\" onClick={onRemove}>\n          <span style={{ color: \"var(--core-color-danger)\" }}>Delete</span>\n        </Our.Button>\n      </td>\n    </tr>\n  );\n}\n","import React, { useState } from \"react\";\nimport Header from \"../components/Header\";\nimport * as Our from \"../components/Core\";\nimport { auth, useSession } from \"../services/firebase\";\n\nexport default function MyAccount() {\n  const userSession = useSession();\n  const [darkMode, setDarkMode] = useState(document.body.hasAttribute(\"mode\"));\n\n  function toggleMode(e) {\n    if (!e.target.checked) {\n      setDarkMode(false);\n      document.body.removeAttribute(\"mode\");\n    } else {\n      document.body.setAttribute(\"mode\", \"dark\");\n      setDarkMode(true);\n    }\n  }\n\n  return (\n    <>\n      <Header user={userSession} onSignOut={() => auth.signOut()}></Header>\n      <Our.Container center size=\"md\">\n        <Our.Box padding-x=\"lg\" margin-y=\"xl\">\n          <Our.Text weight=\"500\" inline tag=\"h1\">\n            Account\n          </Our.Text>\n        </Our.Box>\n        <Our.Box padding-x=\"lg\" margin-y=\"md\">\n          <Our.Toggle full checked={darkMode} onChange={toggleMode}>\n            {darkMode ? (\n              <i className=\"gg-moon\"></i>\n            ) : (\n              <i className=\"gg-sun\"></i>\n            )}\n          </Our.Toggle>\n        </Our.Box>\n        <Our.Box padding-x=\"lg\" margin-y=\"md\">\n          <Our.Button full onClick={() => auth.signOut()}>\n            Logout\n          </Our.Button>\n        </Our.Box>\n      </Our.Container>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport geohash from \"ngeohash\";\nimport * as Our from \"./Core\";\nimport MapSearchInput from \"./MapSearchInput\";\n\nexport default function InputPlace({\n  initialState = {\n    name: \"\",\n    address: \"\",\n    lat: 0,\n    lng: 0,\n    geohash: \"\",\n    countryCode: \"\",\n  },\n  resetOnSubmit = false,\n  isLoading = false,\n  onSubmit = () => {},\n  submitButtonText = \"Save\",\n}) {\n  const [isChanged, setIsChanged] = useState(false);\n  const [input, setInput] = useState(initialState);\n\n  function handleSetInput(newInput) {\n    setIsChanged(true);\n    setInput(newInput);\n  }\n\n  function handleOnSubmit() {\n    const { __typename, id, ...data } = input;\n    onSubmit(data);\n    setIsChanged(false);\n    if (resetOnSubmit) setInput(initialState);\n  }\n\n  return (\n    <>\n      <Our.Container size=\"xs\" center>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Name</Our.Label>\n          <Our.Input\n            value={input.name}\n            onChange={(e) => handleSetInput({ ...input, name: e.target.value })}\n            full\n            placeholder=\"Bob's Farm\"\n          ></Our.Input>\n        </Our.Box>\n        <Our.Box margin-y=\"md\">\n          <Our.Label>Place</Our.Label>\n          <MapSearchInput\n            onSelect={(place) => {\n              handleSetInput({\n                ...input,\n                address: place.address,\n                lat: place.lat,\n                lng: place.lng,\n                geohash: geohash.encode(place.lat, place.lng),\n              });\n            }}\n          ></MapSearchInput>\n        </Our.Box>\n        <Our.Box margin-y=\"xl\">\n          <Our.Button\n            disabled={isLoading || !isChanged}\n            full\n            type=\"primary\"\n            onClick={() => handleOnSubmit()}\n          >\n            {submitButtonText}\n          </Our.Button>\n        </Our.Box>\n      </Our.Container>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Header from \"../components/Header\";\nimport * as Our from \"../components/Core\";\nimport { auth, useSession } from \"../services/firebase\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport InputPlace from \"../components/InputPlace\";\n\nconst GET_USER = gql`\n  query GetUser($id: ID!) {\n    user(id: $id) {\n      id\n      places {\n        id\n        name\n        seeds {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_PLACE = gql`\n  mutation AddPlace($input: AddPlaceInput) {\n    addPlace(input: $input) {\n      id\n    }\n  }\n`;\n\nconst REMOVE_PLACE = gql`\n  mutation RemovePlace($id: ID!) {\n    removePlace(id: $id) {\n      id\n    }\n  }\n`;\n\nexport default function MyAccount() {\n  const userSession = useSession();\n\n  const [addPlaceModalIsOpen, setAddPlaceModalIsOpen] = useState(false);\n\n  const { data: userData } = useQuery(GET_USER, {\n    variables: {\n      id: userSession.uid,\n    },\n  });\n\n  const [addPlace] = useMutation(ADD_PLACE);\n  const [removePlace] = useMutation(REMOVE_PLACE);\n\n  return (\n    <>\n      <Header user={userSession} onSignOut={() => auth.signOut()}></Header>\n      <Our.Container center size=\"md\">\n        <Our.Box padding-x=\"lg\" margin-y=\"xl\">\n          <Our.Box margin-y=\"xl\">\n            <Our.Text className=\"main\" weight=\"500\" tag=\"h1\">\n              Bookmarks\n            </Our.Text>\n          </Our.Box>\n        </Our.Box>\n      </Our.Container>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Header from \"../components/Header\";\nimport * as Our from \"../components/Core\";\nimport { auth, useSession } from \"../services/firebase\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport InputPlace from \"../components/InputPlace\";\nimport Spinner from \"../components/Spinner\";\nimport { useHistory } from \"react-router\";\n\nconst GET_USER = gql`\n  query GetUser($id: ID!) {\n    user(id: $id) {\n      id\n      places {\n        id\n        name\n        address\n        seeds {\n          id\n          name\n          count\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_PLACE = gql`\n  mutation AddPlace($input: AddPlaceInput) {\n    addPlace(input: $input) {\n      id\n    }\n  }\n`;\n\nconst REMOVE_PLACE = gql`\n  mutation RemovePlace($id: ID!) {\n    removePlace(id: $id) {\n      id\n    }\n  }\n`;\n\nexport default function MyAccount() {\n  const userSession = useSession();\n  const history = useHistory();\n\n  const [addPlaceModalIsOpen, setAddPlaceModalIsOpen] = useState(false);\n\n  const { data: userData, loading: loadingUserData } = useQuery(GET_USER, {\n    variables: {\n      id: userSession.uid,\n    },\n  });\n\n  const [addPlace] = useMutation(ADD_PLACE);\n  const [removePlace] = useMutation(REMOVE_PLACE);\n\n  return (\n    <>\n      <Header user={userSession} onSignOut={() => auth.signOut()}></Header>\n      <Our.Container center size=\"md\">\n        <Our.Box padding-x=\"lg\" margin-y=\"xl\">\n          <Our.Flex align-items=\"center\" justify-content=\"between\">\n            <Our.Text weight=\"500\" tag=\"h1\">\n              Places\n            </Our.Text>\n            <Our.Button\n              type=\"transparent\"\n              onClick={() => setAddPlaceModalIsOpen(true)}\n            >\n              <i className=\"gg-math-plus\"></i>\n            </Our.Button>\n          </Our.Flex>\n        </Our.Box>\n        <Our.Box margin-y=\"lg\">\n          {loadingUserData && (\n            <Our.Flex justify-content=\"center\" align-items=\"center\">\n              <Spinner></Spinner>\n            </Our.Flex>\n          )}\n          {userData && !userData.user.places.length && (\n            <Our.Box padding-x=\"lg\">\n              <Our.Text tag=\"h3\" weight=\"400\">\n                Add a place to list your seeds\n              </Our.Text>\n            </Our.Box>\n          )}\n          {userData && (\n            <table className=\"clickable\">\n              <tbody>\n                {userData.user.places.map((place) => {\n                  return (\n                    <tr\n                      onClick={() => history.push(`/my-listings/${place.id}`)}\n                      key={place.id}\n                    >\n                      <td>\n                        <Our.Text full weight=\"400\" tag=\"h3\">\n                          {place.name}\n                        </Our.Text>\n                        <Our.Text full weight=\"400\" tag=\"p\">\n                          {place.address}\n                        </Our.Text>\n                      </td>\n                      <td className=\"align-right\">\n                        <Our.Box\n                          radius=\"sm\"\n                          inline\n                          padding-y=\"sm\"\n                          padding-x=\"md\"\n                          bg=\"ui-light\"\n                        >\n                          <Our.Text no-wrap tag=\"small\">\n                            {place.seeds && place.seeds.length}\n                          </Our.Text>\n                        </Our.Box>\n                        <Our.Button squared type=\"transparent\">\n                          <i className=\"gg-chevron-right\"></i>\n                        </Our.Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </Our.Box>\n      </Our.Container>\n      <Our.Modal\n        title=\"Add Place\"\n        open={addPlaceModalIsOpen}\n        onToggle={(e) => setAddPlaceModalIsOpen(e.target.open)}\n      >\n        <InputPlace\n          resetOnSubmit\n          onSubmit={(input) => {\n            setAddPlaceModalIsOpen(false);\n            addPlace({\n              variables: { input: { ...input, userId: userSession.uid } },\n              refetchQueries: [\n                {\n                  query: GET_USER,\n                  variables: { id: userSession.uid },\n                },\n              ],\n            });\n          }}\n        ></InputPlace>\n      </Our.Modal>\n    </>\n  );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport * as Our from \"../components/Core\";\nimport Header from \"../components/Header\";\nimport Spinner from \"../components/Spinner\";\nimport SeedCard from \"../components/SeedCard\";\nimport { getGeohashRange } from \"../utils\";\nimport enums from \"../constants/enums\";\nimport { useSession, auth } from \"../services/firebase\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport mapboxgl from \"mapbox-gl/dist/mapbox-gl.js\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoibGVpZnJpa3NoZWltIiwiYSI6ImNrYThza2VibzAyd3cycXBqZjRpNjdlc2MifQ.ohHSpM7z_MU_NLEsJ1r2lQ\";\n\nfunction useRouteQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst SEEDS = gql`\n  query Seeds($filter: SeedFilters!) {\n    seeds(filter: $filter) {\n      id\n      name\n      place {\n        lat\n        lng\n        address\n      }\n    }\n  }\n`;\n\nexport default function SearchResults() {\n  const userSession = useSession();\n  const query = useRouteQuery();\n  const history = useHistory(\"\");\n\n  const [mapInstance, setMapInstance] = useState(null);\n\n  const id = query.get(\"id\");\n  const name = query.get(\"name\");\n  const lat = query.get(\"lat\");\n  const lng = query.get(\"lng\");\n  const geoHashRange = getGeohashRange(Number(lat), Number(lng));\n\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState(undefined);\n\n  const { data: seedData, loading: loadingSeeds } = useQuery(SEEDS, {\n    variables: {\n      filter: {\n        AND: [\n          {\n            geohash: {\n              gte: geoHashRange.lower,\n            },\n          },\n          {\n            geohash: {\n              lte: geoHashRange.upper,\n            },\n          },\n        ],\n      },\n    },\n  });\n\n  function onMapLoad() {\n    //  this is map instance\n    this.resize();\n  }\n\n  function onMapMove() {\n    // this is map instance\n    const mapLng = this.getCenter().lng.toFixed(4);\n    const mapLat = this.getCenter().lat.toFixed(4);\n    const mapZoom = this.getZoom().toFixed(2);\n    history.push(`/results?&lat=${mapLat}&lng=${mapLng}`);\n  }\n\n  const mapRef = useCallback((node) => {\n    if (node !== null) {\n      const map = new mapboxgl.Map({\n        container: node,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [lng, lat],\n        zoom: 10,\n      });\n      setMapInstance(map);\n      map.on(\"load\", onMapLoad);\n      map.on(\"moveend\", onMapMove);\n    }\n    return () => {\n      mapInstance.off(\"load\", onMapLoad);\n      mapInstance.off(\"moveend\", onMapMove);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (seedData && mapInstance) {\n      seedData.seeds.map((seed) => {\n        const marker = new mapboxgl.Marker()\n          .setLngLat([seed.place.lng, seed.place.lat])\n          .addTo(mapInstance);\n      });\n    }\n  }, [JSON.stringify(seedData), mapInstance]);\n\n  return (\n    <>\n      <Header user={userSession} onSignOut={() => auth.signOut()}></Header>\n\n      <Our.Container center size=\"full\">\n        <>\n          <Our.Grid gap=\"sm\">\n            <Our.GridItem sm=\"12\" md=\"4\">\n              <Our.Box padding-t=\"md\" padding-x=\"lg\">\n                <Our.Box inline margin-r=\"sm\">\n                  <Our.Button rounded size=\"sm\" type=\"secondary\">\n                    Change location\n                    <i className=\"gg-chevron-down\" slot=\"end\"></i>\n                  </Our.Button>\n                </Our.Box>\n                <Our.Box inline margin-r=\"sm\">\n                  <Our.Button\n                    rounded\n                    size=\"sm\"\n                    type=\"secondary\"\n                    onClick={() => setShowFilters(!showFilters)}\n                  >\n                    Filters\n                    <i className=\"gg-chevron-down\" slot=\"end\"></i>\n                  </Our.Button>\n                </Our.Box>\n                {showFilters && (\n                  <Our.Box margin-y=\"lg\">\n                    <Filters></Filters>\n                  </Our.Box>\n                )}\n\n                <Our.Box margin-y=\"lg\">\n                  {loadingSeeds ? (\n                    <Our.Flex justify-content=\"center\" align-items=\"center\">\n                      <Spinner></Spinner>\n                    </Our.Flex>\n                  ) : (\n                    seedData &&\n                    seedData.seeds &&\n                    seedData.seeds.map((seed) => (\n                      <SeedCard key={seed.id} seed={seed}></SeedCard>\n                    ))\n                  )}\n                </Our.Box>\n              </Our.Box>\n            </Our.GridItem>\n            <Our.GridItem sm=\"none\" md=\"8\">\n              <div ref={mapRef}></div>\n            </Our.GridItem>\n          </Our.Grid>\n        </>\n      </Our.Container>\n    </>\n  );\n}\n\nfunction Filters() {\n  return (\n    <>\n      <Our.Box inline margin-r=\"md\">\n        <Our.Label>Sun conditions</Our.Label>\n        <Our.Select>\n          {enums.sunConditions.map((option) => (\n            <Our.Option key={option} value={option}></Our.Option>\n          ))}\n        </Our.Select>\n      </Our.Box>\n      <Our.Box inline margin-r=\"md\">\n        <Our.Label>Soil conditions</Our.Label>\n        <Our.Select>\n          {enums.soilConditions.map((option) => (\n            <Our.Option key={option} value={option}></Our.Option>\n          ))}\n        </Our.Select>\n      </Our.Box>\n      <Our.Box inline margin-r=\"md\">\n        <Our.Label>Water requirement</Our.Label>\n        <Our.Range\n          labels=\"Low,Medium,High\"\n          sensitivity=\"0.7\"\n          value=\"0,4\"\n          max=\"4\"\n          min=\"0\"\n          step=\"1\"\n        ></Our.Range>\n      </Our.Box>\n      <Our.Box inline margin-r=\"md\">\n        <Our.Label>Temperature</Our.Label>\n        <Our.Range\n          labels=\"0,10,20,30,40\"\n          sensitivity=\"0.7\"\n          value=\"0,40\"\n          max=\"40\"\n          min=\"-0\"\n          step=\"5\"\n        ></Our.Range>\n      </Our.Box>\n      <Our.Box inline margin-r=\"md\">\n        <Our.Label>What are you looking for?</Our.Label>\n        {enums.seedCategories.map((option) => (\n          <Our.Checkbox key={option} size=\"sm\" value={option}>\n            {option}\n          </Our.Checkbox>\n        ))}\n      </Our.Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./graphql/index.js\";\nimport { useAuth, UserContext } from \"./services/firebase\";\n\nimport * as Our from \"./components/Core\";\n\nimport Home from \"./screens/Home\";\nimport Spinner from \"./components/Spinner\";\nimport Login from \"./screens/Login\";\nimport MyPlace from \"./screens/MyPlace\";\nimport MyAccount from \"./screens/MyAccount\";\nimport MyBookmarks from \"./screens/MyBookmarks\";\nimport MyListings from \"./screens/MyListings\";\nimport SearchResults from \"./screens/SearchResults\";\n\nfunction PrivateRoute({ component: Component, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction App() {\n  const { initializing, user } = useAuth();\n  if (initializing) {\n    return (\n      <Our.Container center size=\"xs\">\n        <Our.Box padding-y=\"xl\">\n          <Our.Flex align-items=\"center\" justify-content=\"center\">\n            <Spinner></Spinner>\n          </Our.Flex>\n        </Our.Box>\n      </Our.Container>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <UserContext.Provider value={{ user }}>\n        <ApolloProvider client={client}>\n          <Router basename={window.location.pathname || \"\"}>\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/results\" component={SearchResults}></Route>\n              <PrivateRoute\n                isAuthenticated={user}\n                exact\n                path=\"/my-listings\"\n                component={MyListings}\n              ></PrivateRoute>\n              <PrivateRoute\n                isAuthenticated={user}\n                path=\"/my-listings/:placeId\"\n                component={MyPlace}\n              ></PrivateRoute>\n              <PrivateRoute\n                isAuthenticated={user}\n                path=\"/my-account\"\n                component={MyAccount}\n              ></PrivateRoute>\n              <PrivateRoute\n                isAuthenticated={user}\n                path=\"/my-bookmarks\"\n                component={MyBookmarks}\n              ></PrivateRoute>\n              <Route path=\"/login\" component={Login}></Route>\n            </Switch>\n          </Router>\n        </ApolloProvider>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// core elements\nimport \"core-elements\";\nimport \"core-elements/dist/themes/minimal.css\";\n\nimport \"./index.css\";\nimport \"css.gg/icons/all.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}